{"version":3,"sources":["Components/Navbar.jsx","Components/Movie.tsx","Components/MovieDetails.tsx","Context/actualDataContext.tsx","Components/Movies.tsx","Components/Spinner.jsx","Components/SortingForm.tsx","Components/ErrorBlock.tsx","Components/FilterForm.tsx","Hooks/useGetData.js","Components/MainPage.tsx","Components/About.jsx","App.jsx","index.js"],"names":["Navbar","className","exact","to","activeClassName","Movie","props","onClick","src","image","alt","title","genre","artist","releasedate","MovieDetails","details","handleClose","label","replace","target","rel","download","type","link","attributes","href","category","summary","rights","ActualData","createContext","actData","updateData","filter","updateFilter","ActualDataProvider","useState","setActData","setFilter","value","useMemo","newData","newFilter","Provider","children","Movies","items","isDetails","setIsDeteils","setDetails","useContext","showDetails","item","toUpperCase","includes","map","Date","now","indexOf","LoadingIndicator","style","width","height","display","justifyContent","alignItems","color","SortingForm","SortData","event","filterCriteria","res","sort","a","b","ErrorBlock","errorInfo","SearchForm","setValue","showAlert","setShowAlert","placeholder","onChange","autoComplete","preventDefault","submitValue","buttonText","length","clearFilter","useGetData","isLoading","setIsLoading","isError","setIsError","Error","setError","data","setData","useEffect","axios","get","then","result","feed","entry","catch","error","console","log","Search","FilterForm","Spinner","About","App","path","component","MainPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAoBeA,MAhBf,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,oBAAIA,UAAU,QAAd,4BACA,qBAAIA,UAAU,OAAd,UACE,6BACE,cAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIF,UAAU,UAAUG,gBAAgB,WAA1D,oBAEF,6BACE,cAAC,IAAD,CAASD,GAAG,SAASF,UAAU,UAAUG,gBAAgB,WAAzD,4B,aCYKC,MAdf,SAAeC,GACb,OACE,sBAAKL,UAAU,YAAYM,QAASD,EAAMC,QAA1C,UACE,qBAAKN,UAAU,WAAWO,IAAKF,EAAMG,MAAOC,IAAI,eAChD,sBAAKT,UAAU,mBAAf,UACE,4BAAG,+BAAOK,EAAMK,UAChB,4BAAIL,EAAMM,QACV,8BAAG,4CAAsBN,EAAMO,UAC/B,8BAAG,iDAA2BP,EAAMQ,sBC4B7BC,G,MAvCM,SAACT,GAAkB,IAAD,8BAC7BU,EAAYV,EAAZU,QAER,OAAOA,EACL,qBAAKf,UAAU,cAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,aAAaM,QAASD,EAAMW,YAA5C,eACA,sBAAKhB,UAAU,eAAf,UACE,qBAAKO,IAAG,UAAEQ,EAAQ,YAAY,UAAtB,aAAE,EAAwBE,MAAMC,QAAQ,gCAAiC,WAC/ET,IAAG,UAAEM,EAAQ,kBAAV,aAAE,EAAoBE,QAC3B,4BAAG,mBACDE,OAAO,SACPC,IAAI,sBACJC,SAAQ,UAAEN,EAAQ,kBAAV,aAAE,EAAoBE,MAC9BK,KAAI,UAAEP,EAAQQ,KAAK,UAAf,aAAE,EAAiBC,WAAWF,KAClCG,KAAI,UAAEV,EAAQ,YAAY,UAAtB,aAAE,EAAwBE,MAAMC,QAAQ,gCAAiC,aAL5E,mCASL,sBAAKlB,UAAU,oBAAf,UACE,8BAAG,2CAAH,UAAwBe,EAAQ,kBAAhC,aAAwB,EAAoBE,SAC5C,8BAAG,2CAAH,UAAwBF,EAAQW,SAASF,kBAAzC,aAAwB,EAA6BP,SACrD,8BAAG,4CAAH,UAAyBF,EAAQ,oBAAjC,aAAyB,EAAsBE,SAC/C,8BAAG,iDAAH,UAA8BF,EAAQ,kBAAkBS,kBAAxD,aAA8B,EAAsCP,SACpE,8BAAG,iDAAH,UAA8BF,EAAQY,eAAtC,aAA8B,EAAiBV,SAC/C,mBACEE,OAAO,SACPC,IAAI,sBACJE,KAAI,UAAEP,EAAQQ,KAAK,UAAf,aAAE,EAAiBC,WAAWF,KAClCG,KAAI,UAAEV,EAAQQ,KAAK,UAAf,aAAE,EAAiBC,WAAWC,KAJpC,oCAMA,gDAASV,EAAQ,yBAAjB,aAAS,EAA2BE,MAApC,oBAAkDF,EAAQ,mBAA1D,aAAkD,EAAqBE,SACvE,mDAAYF,EAAQa,cAApB,aAAY,EAAgBX,iBAIhC,OCWOY,EAAaC,wBAAmC,CAC3DC,QAAS,GACTC,WAAY,aACZC,OAAQ,GACRC,aAAc,eA6BDC,EAtBY,SAAC9B,GAC1B,MAA8B+B,mBAAqB,IAAnD,mBAAOL,EAAP,KAAgBM,EAAhB,KACA,EAA4BD,mBAAS,IAArC,mBAAOH,EAAP,KAAeK,EAAf,KAEMC,EAAQC,mBAAQ,iBAAO,CAC3BT,UACAC,WAAY,SAACS,GACXJ,EAAWI,IAEbR,SACAC,aAAc,SAACQ,GACbJ,EAAUI,OAEV,CAACX,EAASE,IAEd,OACE,cAACJ,EAAWc,SAAZ,CAAqBJ,MAAOA,EAA5B,SACGlC,EAAMuC,Y,MCnCEC,MArCf,SAAgBxC,GAAe,IAAD,EACtByC,EAAWzC,EAAXyC,MACN,EAAkCV,oBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAA8BZ,mBAAmB,IAAjD,mBAAOrB,EAAP,KAAgBkC,EAAhB,KACQhB,EAAWiB,qBAAWrB,GAAtBI,OAER,SAASkB,IAA8C,IAAlCC,EAAiC,uDAAhB,GACpCJ,GAAcD,GACdE,EAAWG,GAOb,OAJIN,GAASb,IACXa,EAAQA,EAAMb,QAAO,SAAAmB,GAAI,OAAIA,EAAK,WAAWnC,MAAMoC,cAAcC,SAASrB,EAAOoB,mBAIjF,sBAAKrD,UAAU,cAAf,oBACG8C,SADH,aACG,EAAOS,KAAI,SAAAH,GAAI,qBACd,cAAC,EAAD,CAEE1C,MAAK,UAAE0C,EAAK,kBAAP,aAAE,EAAiBnC,MACxBN,MAAK,UAAEyC,EAAK1B,SAASF,kBAAhB,aAAE,EAA0BP,MACjCL,OAAM,UAAEwC,EAAK,oBAAP,aAAE,EAAmBnC,MAC3BJ,YAAW,UAAEuC,EAAK,kBAAkB5B,kBAAzB,aAAE,EAAmCP,MAChDT,MAAK,UAAE4C,EAAK,YAAY,UAAnB,aAAE,EAAqBnC,MAAMC,QAAQ,gCAAiC,WAC3EZ,QAAS,kBAAM6C,EAAYC,KANtBI,KAAKC,MAAQX,EAAMY,QAAQN,OASnCL,GACC,cAAC,EAAD,CACE/B,YAAamC,EACbpC,QAASA,Q,iBCvBJ4C,EAjBU,WAEvB,OACE,qBACEC,MAAO,CACLC,MAAO,OACPC,OAAQ,MACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,SASE,cAAC,IAAD,CAAQ3C,KAAK,YAAY4C,MAAM,UAAUJ,OAAO,MAAMD,MAAM,W,QCyBnDM,EAnCK,WAClB,MAAgCjB,qBAAWrB,GAAnCE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAEXoC,EAAW,SAACC,GAChB,IAAMC,EAAiBD,EAAMlD,OAAOT,MAC9B6D,EAAG,YAAOxC,GAEO,SAAnBuC,IACFC,EAAIC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE,WAAWxD,MAAQyD,EAAE,WAAWzD,MAAS,EAAMyD,EAAE,WAAWzD,MAAQwD,EAAE,WAAWxD,OAAU,EAAI,KACrHe,EAAWuC,IAEU,WAAnBD,IACFC,EAAIC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE,aAAaxD,MAAQyD,EAAE,aAAazD,MAAS,EAAMyD,EAAE,aAAazD,MAAQwD,EAAE,aAAaxD,OAAU,EAAI,KAC7He,EAAWuC,IAEU,UAAnBD,IACFC,EAAIC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/C,SAASF,WAAWP,MAAQyD,EAAEhD,SAASF,WAAWP,MAAS,EAAMyD,EAAEhD,SAASF,WAAWP,MAAQwD,EAAE/C,SAASF,WAAWP,OAAU,EAAI,KACzJe,EAAWuC,IAEU,UAAnBD,GACFtC,EAAW,KAIf,OACE,sBAAKhC,UAAU,UAAf,UACE,wDACA,wBAAQU,MAAM,OAAOJ,QAAS,SAAC+D,GAAD,OAAgDD,EAASC,IAAvF,kBACA,wBAAQ3D,MAAM,SAASJ,QAAS,SAAC+D,GAAD,OAAgDD,EAASC,IAAzF,oBACA,wBAAQ3D,MAAM,QAAQJ,QAAS,SAAC+D,GAAD,OAAgDD,EAASC,IAAxF,mBACA,wBAAQ3D,MAAM,QAAQJ,QAAS,SAAC+D,GAAD,OAAgDD,EAASC,IAAxF,+BCtBSM,MARf,YAA2C,IAArBC,EAAoB,EAApBA,UACpB,OACE,8BACE,4BAAIA,O,MCqDKC,MAlDf,SAAoBxE,GAClB,MAA0B+B,mBAAS,IAAnC,mBAAOG,EAAP,KAAcuC,EAAd,KACA,EAAkC1C,oBAAS,GAA3C,mBAAO2C,EAAP,KAAkBC,EAAlB,KACA,EAAiC9B,qBAAWrB,GAApCI,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,aAwBhB,OACE,sBAAKlC,UAAU,YAAf,UACE,sDACA,iCACE,uBACEsB,KAAK,OACL2D,YAAa5E,EAAM4E,YACnB1C,MAAOA,EACP2C,SA9BY,SAACb,GACnBS,EAAST,EAAMlD,OAAOoB,QA8BhB4C,aAAa,QAEf,wBAAQnF,UAAU,eAAeM,QAAS,SAAC+D,GAAD,OA7B5B,SAACA,GACnBA,EAAMe,iBACQ,KAAV7C,IACDN,GAAU+C,GAAa,GACxB9C,EAAaK,KAEbyC,GAAa,GACb9C,EAAaK,IAsB6E8C,CAAYhB,IAApG,SACGhE,EAAMiF,aAET,wBAAQhF,QAAS,SAAC+D,GAAD,OAtBH,SAACA,GACnBA,EAAMe,iBACF7C,EAAMgD,SACRT,EAAS,IACT5C,EAAa,KAkBoDsD,CAAYnB,IAA3E,0BAGCU,EAAY,qBAAK,cAAY,cAAjB,qCAA+D,Y,0CCvBrEU,EA5BI,WACjB,MAAkCrD,oBAAS,GAA3C,mBAAOsD,EAAP,KAAkBC,EAAlB,KACA,EAA8BvD,oBAAS,GAAvC,mBAAOwD,EAAP,KAAgBC,EAAhB,KACA,EAA0BzD,mBAAS,IAAnC,mBAAO0D,EAAP,KAAcC,EAAd,KACA,EAAwB3D,mBAAS,IAAjC,mBAAO4D,EAAP,KAAaC,EAAb,KAqBA,OAnBAC,qBAAU,WAER,sBAAC,sBAAAzB,EAAA,6DACCoB,GAAW,GACXF,GAAa,GAFd,SAIOQ,IACHC,IADG,4DAEHC,MAAK,SAAAC,GACJL,EAAQK,EAAON,KAAKO,KAAKC,OACzBb,GAAa,MAEdc,OAAM,SAACC,GACNX,EAASW,GACTb,GAAW,GACXc,QAAQC,IAAI,8BAA+BF,MAbhD,0CAAD,KAgBC,CAACT,IACG,CAAC,CAAED,OAAMN,YAAWE,UAASE,W,MCUvBe,MA3Bf,WACE,MAA8CpB,IAA9C,sBAASO,EAAT,EAASA,KAAMN,EAAf,EAAeA,UAAWE,EAA1B,EAA0BA,QAASE,EAAnC,EAAmCA,MACnC,EAAgC5C,qBAAWrB,GAAnCE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAQjB,OANAkE,qBAAU,WACHnE,EAAQwD,QACXvD,EAAWgE,KAEZ,CAAChE,EAAYgE,EAAMjE,EAAQwD,SAG5B,sBAAKvF,UAAU,WAAf,UACE,sBAAKA,UAAU,kBAAf,UACA,cAAC,EAAD,IACA,cAAC8G,EAAD,CACE7B,YAAY,mBACZK,WAAW,cAGZI,EAAY,cAACqB,EAAD,IAAc,KAC1BnB,EACG,cAAC,EAAD,CAAYhB,UAAWkB,IACvB,cAAC,EAAD,CAAQhD,MAAOf,Q,MCjBViF,MAdf,WACE,OACE,gCACE,sHACA,8BAAG,sDAAH,qCACA,8BAAG,8DAAH,4JACA,8BAAG,4CAAH,wKACA,8BAAG,2CAAH,+QACA,wNACA,+M,MCaSC,MAff,WAEE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIjH,OAAK,EAACkH,UAAWC,IACjC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWH,aCZxCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0ec6395c.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\n\r\nimport '../Styles/css/navbarStyle.css';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className='navBar'>\r\n      <h2 className='title'>Top 100 Movies</h2>\r\n      <ul className='list'>\r\n        <li>\r\n          <NavLink exact to=\"/\" className='navlink' activeClassName='selected'>Home</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/About\" className='navlink' activeClassName='selected'>About</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import '../Styles/css/movie.css';\r\n\r\ntype Props = {\r\n  onClick: () => void,\r\n  image: string,\r\n  title: string,\r\n  genre: string,\r\n  artist: string,\r\n  releasedate: Date\r\n}\r\n\r\nfunction Movie(props: Props) {\r\n  return (\r\n    <div className='movieCard' onClick={props.onClick}>\r\n      <img className='movieImg' src={props.image} alt='movieImage'/>\r\n      <div className='movieMainDetails'>\r\n        <p><span>{props.title}</span></p>\r\n        <p>{props.genre}</p>\r\n        <p><span>Artist: </span>{props.artist}</p>\r\n        <p><span>Releasedate: </span>{props.releasedate}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movie;\r\n","import { Datatype } from '../Context/actualDataContext';\r\nimport '../Styles/css/movieDetails.css';\r\n\r\ntype Props = {\r\n  details: Datatype,\r\n  handleClose: () => void\r\n}\r\n\r\nconst MovieDetails = (props: Props) => {\r\n  const { details } = props;\r\n\r\n  return details ? (\r\n    <div className='details-box'>\r\n      <div className='box'>\r\n        <span className='close-icon' onClick={props.handleClose}>x</span>\r\n        <div className='imageDetails'>\r\n          <img src={details['im:image'][0]?.label.replace(/(?<!\\d)\\d{2,2}x\\d{2,2}(?!\\d)/g, '300x300')}\r\n            alt={details['im:name']?.label} />\r\n          <p><a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            download={details['im:name']?.label}\r\n            type={details.link[0]?.attributes.type}\r\n            href={details['im:image'][0]?.label.replace(/(?<!\\d)\\d{2,2}x\\d{2,2}(?!\\d)/g, '2000x3000')}\r\n          >\r\n            Download poster!</a></p>\r\n        </div>\r\n        <div className='characteristicBox'>\r\n          <p><span>Title: </span>{details['im:name']?.label}</p>\r\n          <p><span>Genre: </span>{details.category.attributes?.label}</p>\r\n          <p><span>Artist: </span>{details[\"im:artist\"]?.label}</p>\r\n          <p><span>Releasedate: </span>{details['im:releaseDate'].attributes?.label}</p>\r\n          <p><span>Description: </span>{details.summary?.label}</p>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            type={details.link[0]?.attributes.type}\r\n            href={details.link[0]?.attributes.href}\r\n          >View more on apple.com</a>\r\n          <p>Rent {details['im:rentalPrice']?.label} / Buy {details['im:price']?.label}</p>\r\n          <p>Rights: {details.rights?.label}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default MovieDetails;\r\n","import { createContext, useState, useMemo } from 'react';\r\n\r\nexport type Datatype = {\r\n  onClick: () => void,\r\n  image: string,\r\n  title: string,\r\n  genre: string,\r\n  artist: string,\r\n  releasedate: Date,\r\n  ['im:name']: {\r\n    label: string\r\n  },\r\n  ['im:artist']: {\r\n    label: string\r\n  },\r\n  ['im:releaseDate']: {\r\n    attributes: {\r\n      label: Date\r\n    }\r\n  },\r\n  category: {\r\n    attributes: {\r\n      label: string\r\n    }\r\n  },\r\n  ['im:image']: {\r\n    label: string\r\n  }[],\r\n  ['im:rentalPrice']: {\r\n    label: string\r\n  },\r\n  rights: {\r\n    label: string\r\n  },\r\n  link: {\r\n    attributes: {\r\n      type: string,\r\n      href: string\r\n    }\r\n  }[],\r\n  summary: {\r\n    label: string\r\n  },\r\n  ['im:price']: {\r\n    label: string\r\n  }\r\n}\r\n\r\ninterface AppContextInterface {\r\n    actData: Datatype[],\r\n    updateData: (data: Datatype[]) => void,\r\n    filter: string,\r\n    updateFilter: Function\r\n}\r\n\r\nexport const ActualData = createContext<AppContextInterface>({\r\n  actData: [],\r\n  updateData: () => {},\r\n  filter: '',\r\n  updateFilter: () => {}\r\n});\r\n\r\ntype Props = {\r\n  children: any\r\n}\r\n\r\nconst ActualDataProvider = (props: Props) => {\r\n  const [actData, setActData] = useState<Datatype[]>([]);\r\n  const [filter, setFilter] = useState('')\r\n\r\n  const value = useMemo(() => ({\r\n    actData,\r\n    updateData: (newData: Datatype[]) => {\r\n      setActData(newData);\r\n    },\r\n    filter,\r\n    updateFilter: (newFilter: string) => {\r\n      setFilter(newFilter);\r\n    },\r\n  }), [actData, filter]);\r\n\r\n  return (\r\n    <ActualData.Provider value={value}>\r\n      {props.children}\r\n    </ActualData.Provider>\r\n  )\r\n}\r\n\r\nexport default ActualDataProvider;\r\n","import { useState, useContext } from 'react';\r\n\r\nimport Movie from './Movie';\r\nimport MovieDetails from './MovieDetails';\r\nimport { ActualData, Datatype } from '../Context/actualDataContext';\r\nimport '../Styles/css/movies.css';\r\n\r\ntype Props = {\r\n  items: Datatype[]\r\n}\r\n\r\nfunction Movies(props: Props) {\r\n  let { items }  = props;\r\n  const [isDetails, setIsDeteils] = useState(false);\r\n  const [details, setDetails] = useState<Datatype>({} as Datatype);\r\n  const { filter } = useContext(ActualData);\r\n\r\n  function showDetails(item: Datatype = {} as Datatype) {\r\n    setIsDeteils(!isDetails);\r\n    setDetails(item);\r\n  }\r\n\r\n  if (items && filter) {\r\n    items = items.filter(item => item['im:name'].label.toUpperCase().includes(filter.toUpperCase()));\r\n  }\r\n\r\n  return (\r\n    <div className='moviesBlock'>\r\n      {items?.map(item => (\r\n        <Movie\r\n          key={Date.now() + items.indexOf(item)}\r\n          title={item['im:name']?.label}\r\n          genre={item.category.attributes?.label}\r\n          artist={item['im:artist']?.label}\r\n          releasedate={item['im:releaseDate'].attributes?.label}\r\n          image={item['im:image'][0]?.label.replace(/(?<!\\d)\\d{2,2}x\\d{2,2}(?!\\d)/g, '300x300')}\r\n          onClick={() => showDetails(item)}\r\n        />\r\n      ))}\r\n      {isDetails &&\r\n        <MovieDetails\r\n          handleClose={showDetails}\r\n          details={details}\r\n        />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movies;\r\n","import Loader from 'react-loader-spinner';\r\n\r\nconst LoadingIndicator = () => {\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      <Loader type=\"ThreeDots\" color=\"#1b3a79\" height=\"100\" width=\"100\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingIndicator;\r\n","import React, { useContext } from 'react'\r\n\r\nimport { ActualData } from '../Context/actualDataContext';\r\n\r\nconst SortingForm = () => {\r\n  const { actData, updateData } = useContext(ActualData);\r\n\r\n  const SortData = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const filterCriteria = event.target.title;\r\n    const res = [...actData];\r\n\r\n    if (filterCriteria === 'name') {\r\n      res.sort((a, b) => (a['im:name'].label > b['im:name'].label) ? 1 : ((b['im:name'].label > a['im:name'].label) ? -1 : 0));\r\n      updateData(res);\r\n    }\r\n    if (filterCriteria === 'artist') {\r\n      res.sort((a, b) => (a['im:artist'].label > b['im:artist'].label) ? 1 : ((b['im:artist'].label > a['im:artist'].label) ? -1 : 0));\r\n      updateData(res);\r\n    }\r\n    if (filterCriteria === 'genre') {\r\n      res.sort((a, b) => (a.category.attributes.label > b.category.attributes.label) ? 1 : ((b.category.attributes.label > a.category.attributes.label) ? -1 : 0));\r\n      updateData(res);\r\n    }\r\n    if (filterCriteria === 'clear') {\r\n      updateData([]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='sorting'>\r\n      <p>Sort Movies by Category</p>\r\n      <button title='name' onClick={(event: React.ChangeEvent<HTMLInputElement>) => SortData(event)}>Name</button>\r\n      <button title='artist' onClick={(event: React.ChangeEvent<HTMLInputElement>) => SortData(event)}>Artist</button>\r\n      <button title='genre' onClick={(event: React.ChangeEvent<HTMLInputElement>) => SortData(event)}>Genre</button>\r\n      <button title='clear' onClick={(event: React.ChangeEvent<HTMLInputElement>) => SortData(event)}>Clear sorting</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortingForm;\r\n","type Props = {\r\n  errorInfo: string\r\n}\r\n\r\nfunction ErrorBlock({ errorInfo }: Props) {\r\n  return (\r\n    <div>\r\n      <p>{errorInfo}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorBlock;\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport { ActualData } from '../Context/actualDataContext';\r\nimport '../Styles/css/movieManipulate.css';\r\n\r\ntype Props = {\r\n  placeholder: string,\r\n  buttonText: string\r\n}\r\n\r\nfunction SearchForm(props: Props) {\r\n  const [value, setValue] = useState('');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const { filter, updateFilter } = useContext(ActualData);\r\n\r\n  const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const submitValue = (event: React.FormEvent<HTMLInputElement>) => {\r\n    event.preventDefault();\r\n    if (value === '') {\r\n      !filter && setShowAlert(true);\r\n      updateFilter(value);\r\n    } else {\r\n      setShowAlert(false);\r\n      updateFilter(value);\r\n    }\r\n  };\r\n  const clearFilter = (event: React.FormEvent<HTMLInputElement>) => {\r\n    event.preventDefault();\r\n    if (value.length) {\r\n      setValue('');\r\n      updateFilter('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='filtering'>\r\n      <p>Filter Movies by Name</p>\r\n      <form>\r\n        <input\r\n          type='text'\r\n          placeholder={props.placeholder}\r\n          value={value}\r\n          onChange={changeValue}\r\n          autoComplete='off'\r\n        />\r\n        <button className='filterButton' onClick={(event: React.FormEvent<HTMLInputElement>) => submitValue(event)}>\r\n          {props.buttonText}\r\n        </button>\r\n        <button onClick={(event: React.FormEvent<HTMLInputElement>) => clearFilter(event)}>\r\n          Clear filter\r\n        </button>\r\n        {showAlert ? <div data-testid='inputAllert'>Please enter movie name</div> : null}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchForm;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGetData = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [Error, setError] = useState('');\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    (async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n\r\n      await axios\r\n        .get(`https://itunes.apple.com/us/rss/topmovies/limit=100/json`)\r\n        .then(result => {\r\n          setData(result.data.feed.entry);\r\n          setIsLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n          setIsError(true);\r\n          console.log('we have received an error: ', error);\r\n        });\r\n    })();\r\n  }, [setData]);\r\n  return [{ data, isLoading, isError, Error }];\r\n}\r\n\r\nexport default useGetData;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport Movies from './Movies';\r\nimport Spinner from './Spinner';\r\nimport SortingForm from './SortingForm';\r\nimport ErrorBlock from './ErrorBlock';\r\nimport FilterForm from './FilterForm';\r\nimport { ActualData } from '../Context/actualDataContext';\r\nimport useGetData from '../Hooks/useGetData';\r\nimport '../Styles/css/mainPage.css';\r\n\r\nfunction Search() {\r\n  const [{ data, isLoading, isError, Error }] = useGetData();\r\n  const { actData, updateData } = useContext(ActualData);\r\n\r\n  useEffect(() => {\r\n    if (!actData.length) {\r\n      updateData(data);\r\n    }\r\n  }, [updateData, data, actData.length]);\r\n\r\n  return (\r\n    <div className='mainPage'>\r\n      <div className='movieManipulate'>\r\n      <SortingForm />\r\n      <FilterForm\r\n        placeholder='Enter Movie Name'\r\n        buttonText='Filter'\r\n      />\r\n      </div>\r\n      {isLoading ? <Spinner /> : null}\r\n      {isError\r\n        ? <ErrorBlock errorInfo={Error} />\r\n        : <Movies items={actData} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search;\r\n","import '../Styles/css/about.css';\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <p>This implements the basic functionality of the iTunes API for finding top 100 movies.</p>\r\n      <p><span>Technologies used:</span> HTML, TypeScript, React, SCSS </p>\r\n      <p><span>Implemented functionality:</span> Load a base object with a list of films and their characteristics. By default, there are up to 100 movies. Number depends on what the server returns.</p>\r\n      <p><span>Sorting:</span> Possibility to sort the films by 3 parameters in alphabetical order. Clear sorting returns the display of movies in the order in which they came from the server.</p>\r\n      <p><span>Filter:</span> Possibility to filter films by entered name or part of the name of the film. The filter displays the results based on the sorting that was set at the time of the search. Resetting the filter will revert to displaying all movies in the sorting last set by the user.</p>\r\n      <p>When you hover your mouse over a film, a small animation is displayed, such as a zoom in and also the film card increases in height and shows 2 additional characteristics of the film.</p>\r\n      <p>When you click on a film card, a pop-up window opens with a detailed description of the film. There is also a link to download the poster of the film in 2000x3000 pixels.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport NavBar from './Components/Navbar';\nimport MainPage from './Components/MainPage';\nimport About from './Components/About';\nimport ActualDataProvider from './Context/actualDataContext';\nimport './Styles/css/App.css';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <ActualDataProvider>\n      <Switch>\n        <Route path=\"/\" exact component={MainPage} />\n        <Route path=\"/About\" component={About} />\n      </Switch>\n      </ActualDataProvider>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}